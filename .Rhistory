data<-scale(data, center = F)
data<-Missingval(data)#fill missing data
##Change to NAs
# data[which(data==0, arr.ind = T)]<-NA
# data[which(data==90, arr.ind = T)]<-NA
for(i in 1:ncol(data)){
#data[which(data[,i]>0, arr.ind = T),i]<-scale(data[which(data[,i]>0, arr.ind = T),i], center=F, scale=T)#scale data
data[which(data[,i]==0, arr.ind = T),i]<-0.01#set zeros to small value so can log
}
data<-log(data)
plot(Xvar, data[,"NSL"], main=specimen)
nvert<-length(Xvar)
###Calculate region models
noregions<-5 #set max regions
nopcos<-5 #set max pcos
pco.gower<-regions::svdPCO(data, "gower")#PCO
PCOscores<-pco.gower$scores[,1:nopcos]
plot(PCOscores[,1], PCOscores[,2], main=specimen)
text(PCOscores[,1], PCOscores[,2], labels=Xvar)
#import regiondata
regiondata<-as.matrix(read.csv(paste(dir.regmod,"\\",paste0(specimen,"_regionmodels.csv"),sep=""))) #read csv, each element separated by a comma
regions::plotpcoreg(eigenvals=pco.gower$eigen.val,nvert=nvert, namelabel=specimen,regiondata=regiondata,noregions=noregions)
plot(PCOscores[,1], PCOscores[,2], main=specimen)
text(PCOscores[,1], PCOscores[,2], labels=Xvar)
##Find support for best models
models<-regions::modelselect(regiondata,noregions,nopcos=3, startpco = 1)
support<-regions::model_support(models,nvert, nPC=3)
support
for(a in c(1:ncol(data))){
plot(Xvar, data[,a], main=colnames(data)[a])
}
data
data<-data[,-"NSH"]
data<-data[,-c("NSH")]
data<-data%>%select(-NSH, -totH)
data<-data[,c(1:9,12:ncol(data))]
data
###Calculate region models
noregions<-5 #set max regions
nopcos<-5 #set max pcos
pco.gower<-regions::svdPCO(data, "gower")#PCO
PCOscores<-pco.gower$scores[,1:nopcos]
plot(PCOscores[,1], PCOscores[,2], main=specimen)
text(PCOscores[,1], PCOscores[,2], labels=Xvar)
regiondata<-regions::compileregions(Xvar,PCOscores,noregions)
#PGLS -pagel
w<-diag(vcv.phylo(tree2))#calc weights for nonultrametric tree
pgls.tree.pag<-nlme::gls(yvar~xvar+group,data=pgls.data, correlation=corMartins(0.5,phy=tree2, fixed=F), method="ML",weights=varFixed(~w))
summary(pgls.tree.pag)
pgls.tree.pag<-nlme::gls(xvar~yvar+group,data=pgls.data, correlation=corMartins(0.5,phy=tree2, fixed=F), method="ML",weights=varFixed(~w))
summary(pgls.tree.pag)
cor(yvar,xvar)
lm(yvar~xvar)
#Normal lm
lm.mod<-lm(yvar~xvar+group, data=pgls.data)
summary(lm.mod)
#Normal lm
lm.mod<-lm(yvar~xvar*group, data=pgls.data)
summary(lm.mod)
#Normal lm
lm.mod<-lm(yvar~xvar*group2, data=pgls.data)
summary(lm.mod)
#Normal lm
lm.mod<-lm(yvar~xvar+group2, data=pgls.data)
summary(lm.mod)
#Normal lm
lm.mod<-lm(yvar~xvar+group, data=pgls.data)
summary(lm.mod)
#Normal lm
lm.mod<-lm(yvar~xvar+group2, data=pgls.data)
summary(lm.mod)
#plot 2 gr
plot(xvar, yvar, col=c("red", "blue", "green", "black")[group], pch=19, xlab="Regionalization score", ylab="Log Variance")
legend(x="topleft", legend=levels(group),bty="n", col=c("red", "blue", "green", "black"), pch=19, cex=0.5)
#Normal lm
lm.mod<-lm(yvar~xvar*group2, data=pgls.data)
summary(lm.mod)
##read tree
tree<-ape::read.nexus(tree.file)
#read data
tree.data<-read.csv(data.file, na.strings = c("?"))
tree.data<-tree.data[which(tree.data$name!="exclude"),]#Exclude duplicates
tree<-drop.tip(tree,setdiff(tree$tip.label,tree.data$name))
tree.data<-tree.data[match(tree$tip.label, tree.data$name),]
##make abbreviated names names
new<-strsplit(tree$tip.label, split="_")
genus<-substr(unlist(new), start=1, stop=3)
species<-substr(unlist(new), start=1, stop=1)
gen<-genus[seq(from=1,to=length(genus), by=2)]
spec<-species[seq(from=2,to=length(species), by=2)]
name<-paste0(gen, spec)
tree$tip.label<-name
rownames(tree.data)<-tree$tip.label
test<-data.frame(tree$tip.label,tree.data$specimen)
split.tree<-splitTree(tree, split=list(node=70, bp=0))#7066
syn.tree<-split.tree[[2]]
plot(syn.tree)
#syn.tree<-tree
dat<-log(tree.data[match(syn.tree$tip.label,rownames(tree.data)),"Mean.Variance"]) #"regscore.pco.max"]
#dat<-tree.data[match(syn.tree$tip.label,rownames(tree.data)),"regscore.pco.max"]
names(dat)<-syn.tree$tip.label
SE <- 0.05
graphics.off()
par(mar=c(2,2,2,2))
prior <- make.prior(syn.tree, dists=list(dalpha="dhalfcauchy", dsig2="dhalfcauchy",dsb="dsb", dk="cdpois", dtheta="dnorm"),
param=list(dalpha=list(scale=0.001), dsig2=list(scale=1), dk=list(lambda=15, kmax=40), dsb=list(bmax=1,prob=1),
dtheta=list(mean=mean(dat), sd=sd(dat))))
prior <- make.prior(syn.tree, dists=list(dalpha="dlnorm", dsig2="dhalfcauchy",dsb="dsb", dk="cdpois", dtheta="dnorm"),
param=list(dalpha=list(scale=0.001), dsig2=list(scale=1), dk=list(lambda=15, kmax=40), dsb=list(bmax=1,prob=1),
dtheta=list(mean=mean(dat), sd=sd(dat))))
prior<-make.prior(syn.tree, dists=list(dists=list("dalpha"="dlnorm","dsig2"="dlnorm", "dk"="cdpois","dtheta"="dnorm","dsb"="dsb","dloc"="dunif"), param=list("dalpha"=list(),"dsig2"=list(),"dtheta"=list(mean=mean(dat), sd=sd(dat)), "dk"=list(lambda=20,kmax=2*ntips-2),"dloc"=list(min=0,max=1),"dsb"=list())))
prior<-make.prior(syn.tree, dists=list(dists=list("dalpha"="dlnorm","dsig2"="dlnorm", "dk"="cdpois","dtheta"="dnorm","dsb"="dsb","dloc"="dunif"), param=list("dalpha"=list(),"dsig2"=list(),"dtheta"=list(mean=mean(dat), sd=sd(dat)), "dk"=list(lambda=20,kmax=2*(length(syn.tree$tip.label))-2),"dloc"=list(min=0,max=1),"dsb"=list())))
prior<-make.prior(syn.tree, dists=list(dists=list("dalpha"="dlnorm","dsig2"="dlnorm", "dk"="cdpois","dtheta"="dnorm","dsb"="dsb","dloc"="dunif"), param=list("dalpha"=list(),"dsig2"=list(),"dtheta"=list(mean=mean(dat), sd=sd(dat)), "dk"=list(lambda=20,kmax=2*(length(syn.tree$tip.label))-2),"dloc"=list(min=0,max=1),"dsb"=list())))
prior <- make.prior(syn.tree, dists=list(dalpha="dlnorm", dsig2="dhalfcauchy",dsb="dsb", dk="cdpois", dtheta="dnorm"),
param=list(dalpha=list(scale=0.001), dsig2=list(scale=1), dk=list(lambda=15, kmax=40), dsb=list(bmax=1,prob=1),
dtheta=list(mean=mean(dat), sd=sd(dat))))
prior <- make.prior(syn.tree, dists=list(dalpha="dlnorm", dsig2="dhalfcauchy",dsb="dsb", dk="cdpois", dtheta="dnorm"),
param=list(dalpha=list(scale=1), dsig2=list(scale=1), dk=list(lambda=15, kmax=40), dsb=list(bmax=1,prob=1),
dtheta=list(mean=mean(dat), sd=sd(dat))))
prior <- make.prior(syn.tree, dists=list(dalpha="dlnorm", dsig2="dhalfcauchy",dsb="dsb", dk="cdpois", dtheta="dnorm"),
param=list(dalpha=list(), dsig2=list(scale=1), dk=list(lambda=15, kmax=40), dsb=list(bmax=1,prob=1),
dtheta=list(mean=mean(dat), sd=sd(dat))))
prior <- make.prior(syn.tree, dists=list(dalpha="dlnorm", dsig2="dlnorm",dsb="dsb", dk="cdpois", dtheta="dnorm"),
param=list(dalpha=list(), dsig2=list(), dk=list(lambda=15, kmax=40), dsb=list(bmax=1,prob=1),
dtheta=list(mean=mean(dat), sd=sd(dat))))
prior<-make.prior(syn.tree, dists=list(dists=list(dalpha="dlnorm",dsig2="dlnorm", dk="cdpois",dtheta="dnorm",dsb="dsb",dloc="dunif"), param=list(dalpha=list(),dsig2=list(),dtheta=list(mean=mean(dat), sd=sd(dat)), dk=list(lambda=20,kmax=2*(length(syn.tree$tip.label))-2),dloc=list(min=0,max=1),dsb=list())))
prior<-make.prior(syn.tree, dists=list(dists=list(dalpha="dlnorm",dsig2="dlnorm", dk="cdpois",dtheta="dnorm",dsb="dsb",dloc="dunif"), param=list(dalpha=list(),dsig2=list(),dtheta=list(), dk=list(lambda=20,kmax=2*(length(syn.tree$tip.label))-2),dloc=list(min=0,max=1),dsb=list())))
2*(length(syn.tree$tip.label))-2
prior<-make.prior(syn.tree, dists=list(dists=list(dalpha="dlnorm",dsig2="dlnorm", dk="cdpois",dtheta="dnorm",dsb="dsb",dloc="dunif"), param=list(dalpha=list(),dsig2=list(),dtheta=list(), dk=list(lambda=20,kmax=98),dloc=list(min=0,max=1),dsb=list())))
fit1 <- bayou.mcmc(syn.tree, dat, SE=SE, model="OU", prior, ngen=100000, new.dir=paste0(getwd(),"/BAYOU FILES"), plot.freq=10000, ticker.freq=10000)
chain <- load.bayou(fit1, save.Rdata=FALSE, cleanup=F)
chain <- set.burnin(chain, 0.3)
out <- summary(chain)
#plot(chain)
par(mfrow=c(1,1))
plotSimmap.mcmc(chain, burnin=0.3, lwd=2, edge.type="theta", pal=colorRampPalette(c("black", "gray90")), show.tip.label=T)
#edgelabels(cex=0.5)
phenogram.density(syn.tree, dat, chain=chain, burnin=0.3, pp.cutoff=0.3, show.tip.label=T)##Change ppcutoff to see shifts
dat<-tree.data[match(syn.tree$tip.label,rownames(tree.data)),"regscore.pco.max"]
#dat<-tree.data[match(syn.tree$tip.label,rownames(tree.data)),"regscore.pco.max"]
names(dat)<-syn.tree$tip.label
SE <- 0.05
graphics.off()
par(mar=c(2,2,2,2))
prior <- make.prior(syn.tree, dists=list(dalpha="dlnorm", dsig2="dlnorm",dsb="dsb", dk="cdpois", dtheta="dnorm"),
param=list(dalpha=list(), dsig2=list(), dk=list(lambda=15, kmax=40), dsb=list(bmax=1,prob=1),
dtheta=list(mean=mean(dat), sd=sd(dat))))
#prior<-make.prior(syn.tree, dists=list(dists=list(dalpha="dlnorm",dsig2="dlnorm", dk="cdpois",dtheta="dnorm",dsb="dsb",dloc="dunif"), param=list(dalpha=list(),dsig2=list(),dtheta=list(), dk=list(lambda=20,kmax=98),dloc=list(min=0,max=1),dsb=list())))
fit1 <- bayou.mcmc(syn.tree, dat, SE=SE, model="OU", prior, ngen=100000, new.dir=paste0(getwd(),"/BAYOU FILES"), plot.freq=10000, ticker.freq=10000)
chain <- load.bayou(fit1, save.Rdata=FALSE, cleanup=F)
chain <- set.burnin(chain, 0.3)
out <- summary(chain)
#plot(chain)
par(mfrow=c(1,1))
plotSimmap.mcmc(chain, burnin=0.3, lwd=2, edge.type="theta", pal=colorRampPalette(c("black", "gray90")), show.tip.label=T)
#edgelabels(cex=0.5)
phenogram.density(syn.tree, dat, chain=chain, burnin=0.3, pp.cutoff=0.3, show.tip.label=T)##Change ppcutoff to see shifts
pgls.data$group
#Make phenogram
tree2<-make.simmap(syn.tree,main[[1]]$fit$dat@regimes)
require(regions)#regions package: Download from github
library(ape)
library(phytools)
library(picante)
library(geiger)
library(bayou)
library(OUwie)
#Make phenogram
tree2<-make.simmap(syn.tree,main[[1]]$fit$dat@regimes)
main[[1]]$fit$dat@regimes
otree
odata
main[[1]]
plot(syn.tree)
syn.tree$tip.label
main[[1]]$fit$dat@hessian
main[[1]]$fit
main[[1]]$fit$dat
main[[1]]$fit$dat@nodelabels
main[[1]]$fit$dat@regimes$regs1
#Make phenogram
states<-cbind(main[[1]]$fit$dat@nodelabels,main[[1]]$fit$dat@regimes$regs1)
states
#Make phenogram
states<-data.frame(main[[1]]$fit$dat@nodelabels,main[[1]]$fit$dat@regimes)
states
which(states$main..1...fit.dat.nodelabels==syn.tree$tip.label)
states$main..1...fit.dat.nodelabels
syn.tree$tip.label
#Make phenogram
states<-data.frame(names=main[[1]]$fit$dat@nodelabels,main[[1]]$fit$dat@regimes)
states$names
as.character(states$names)
#Make phenogram
states<-data.frame(names=as.character(main[[1]]$fit$dat@nodelabels),main[[1]]$fit$dat@regimes)
states$names
which(as.character(states$names)==syn.tree$tip.label)
match(as.character(states$names),syn.tree$tip.label)
match(syn.tree$tip.label,as.character(states$names))
match(tree2$tip.label,as.character(states$names))
syn.tree$tip.label
tree2<-make.simmap(syn.tree,states[match(syn.tree$tip.label,as.character(states$names))])
states[match(syn.tree$tip.label,as.character(states$names))]
states[match(syn.tree$tip.label,as.character(states$names)),2]
tree2<-make.simmap(syn.tree,states[match(syn.tree$tip.label,as.character(states$names)),2])
##read tree
tree<-ape::read.nexus(tree.file)
#read data
tree.data<-read.csv(data.file, na.strings = c("?"))
tree.data<-tree.data[which(tree.data$name!="exclude"),]#Exclude duplicates
tree.data<-tree.data[which(tree.data$rsq.max>0.75),]#Exclude less than 0.75 rsq
tree<-drop.tip(tree,setdiff(tree$tip.label,tree.data$name))
tree.data<-tree.data[match(tree$tip.label, tree.data$name),]
##make abbreviated names names
new<-strsplit(tree$tip.label, split="_")
genus<-substr(unlist(new), start=1, stop=3)
species<-substr(unlist(new), start=1, stop=1)
gen<-genus[seq(from=1,to=length(genus), by=2)]
spec<-species[seq(from=2,to=length(species), by=2)]
name<-paste0(gen, spec)
tree$tip.label<-name
rownames(tree.data)<-tree$tip.label
test<-data.frame(tree$tip.label,tree.data$specimen)
#Extract just synapsids
split.tree<-splitTree(tree, split=list(node=66, bp=0))
syn.tree<-split.tree[[2]]
plot(syn.tree)
#Make phenogram
states<-data.frame(names=main[[1]]$fit$dat@nodelabels,main[[1]]$fit$dat@regimes)
tree2<-make.simmap(syn.tree,states[match(syn.tree$tip.label,as.character(states$names)),2])
states[match(syn.tree$tip.label,as.character(states$names)),2]
syn.tree
tree2<-make.simmap(syn.tree,states[match(syn.tree$tip.label,as.character(states$names)),2])
#Make phenogram
states<-main[[1]]$fit$dat@regimes
names(states)<-main[[1]]$fit$dat@nodelabels
match(syn.tree$tip.label,as.character(names(states)))
names(states)
states
#Make phenogram
states<-main[[1]]$fit$dat@regimes$regs1
states
names(states)<-main[[1]]$fit$dat@nodelabels
states
as.character(names(states)))
as.character(names(states))
match(syn.tree$tip.label,as.character(names(states)))
tree2<-make.simmap(syn.tree,states[match(syn.tree$tip.label,as.character(names(states)))])
tree2$node.label<-getStates(tree2,"nodes")
cols<-c("grey","black", "red"); names(cols)<-c("a", "b", "c")#Match color to group name
#Check nodes correct
plotSimmap(tree2,fsize=0.8,ftype="i", colors=cols)
cols<-c("grey","black", "red"); names(cols)<-c("a", "c", "b")#Match color to group name
#Check nodes correct
plotSimmap(tree2,fsize=0.8,ftype="i", colors=cols)
dev.off()
#plot phenogram
nH <- max(nodeHeights(tree2))
plot(c(0,nH),c(min(dat)-0.25,max(dat)+0.25),type='n',xlab="Time",ylab="Phenotype")
phenogram(tree2, dat, add=TRUE, colors=cols, spread.labels=F)
dat<-log(tree.data[match(syn.tree$tip.label,rownames(tree.data)),"Mean.Variance"])
#dat<-tree.data[match(syn.tree$tip.label,rownames(tree.data)),"regscore.pco.max"]
names(dat)<-syn.tree$tip.label
#plot phenogram
nH <- max(nodeHeights(tree2))
plot(c(0,nH),c(min(dat)-0.25,max(dat)+0.25),type='n',xlab="Time",ylab="Phenotype")
phenogram(tree2, dat, add=TRUE, colors=cols, spread.labels=F)
tree2
states<-states[match(syn.tree$tip.label,as.character(names(states)))]
states
tree2<-make.simmap(syn.tree,states)
tree2$node.label<-getStates(tree2,"nodes")
cols<-c("grey","black", "red"); names(cols)<-c("a", "c", "b")#Match color to group name
#Check nodes correct
plotSimmap(tree2,fsize=0.8,ftype="i", colors=cols)
library(regions)
map.data<-log(tree.data$irregularity)
map.data<-tree.data$regscore.pco.max
names(map.data)<-tree$tip.label
## create a split plot
layout(matrix(c(1,2),1,2),c(1,0.2))
## plot tree
xx<-contMap(tree,map.data,mar=c(4.1,1.1,1.1,0),res=200,plot=FALSE, method="anc.ML")
xx<-phytools::setMap(xx, invert=T)
plot(xx,legend=F,mar=c(4,1.1,1.1,0), direction="leftwards", tip.label=F)
axisPhylo(side=1)
## add dotchart
nTips = length(tree$tip)
ord = tree$edge[,2]
ord = ord[ord <= nTips]
my.palette<-c("black","black","black", "black", "black")#can add colors
colgr<-my.palette[tree.data$group]
symb<-c(16, 21, 8, 17)[tree.data$group]#set symbols
par(mar=c(5,0,2,1.1))
dotchart(map.data[ord],labels="",
ylim=c(1,length(tree$tip.label))-0.5, bg="grey",color=colgr[ord], pch=symb[ord])
map.data<-log(tree.data$concentration)
map.data<-tree.data$regscore.pco.max
names(map.data)<-tree$tip.label
## create a split plot
layout(matrix(c(1,2),1,2),c(1,0.2))
## plot tree
xx<-contMap(tree,map.data,mar=c(4.1,1.1,1.1,0),res=200,plot=FALSE, method="anc.ML")
xx<-phytools::setMap(xx, invert=T)
plot(xx,legend=F,mar=c(4,1.1,1.1,0), direction="rightwards", tip.label=F)
axisPhylo(side=1)
## add dotchart
nTips = length(tree$tip)
ord = tree$edge[,2]
ord = ord[ord <= nTips]
my.palette<-c("black","black","black", "black", "black")#can add colors
colgr<-my.palette[tree.data$group]
symb<-c(16, 21, 8, 17)[tree.data$group]#set symbols
par(mar=c(5,0,2,1.1))
dotchart(map.data[ord],labels="",
ylim=c(1,length(tree$tip.label))-0.5, bg="grey",color=colgr[ord], pch=symb[ord])
map.data<-log(tree.data$smoothness)
map.data<-tree.data$regscore.pco.max
names(map.data)<-tree$tip.label
## create a split plot
layout(matrix(c(1,2),1,2),c(1,0.2))
## plot tree
xx<-contMap(tree,map.data,mar=c(4.1,1.1,1.1,0),res=200,plot=FALSE, method="anc.ML")
xx<-phytools::setMap(xx, invert=T)
plot(xx,legend=F,mar=c(4,1.1,1.1,0), direction="rightwards", tip.label=F)
axisPhylo(side=1)
## add dotchart
nTips = length(tree$tip)
ord = tree$edge[,2]
ord = ord[ord <= nTips]
my.palette<-c("black","black","black", "black", "black")#can add colors
colgr<-my.palette[tree.data$group]
symb<-c(16, 21, 8, 17)[tree.data$group]#set symbols
par(mar=c(5,0,2,1.1))
dotchart(map.data[ord],labels="",
ylim=c(1,length(tree$tip.label))-0.5, bg="grey",color=colgr[ord], pch=symb[ord])
map.data<-log(tree.data$smoothness)
#map.data<-tree.data$regscore.pco.max
names(map.data)<-tree$tip.label
## create a split plot
layout(matrix(c(1,2),1,2),c(1,0.2))
## plot tree
xx<-contMap(tree,map.data,mar=c(4.1,1.1,1.1,0),res=200,plot=FALSE, method="anc.ML")
xx<-phytools::setMap(xx, invert=T)
plot(xx,legend=F,mar=c(4,1.1,1.1,0), direction="rightwards", tip.label=F)
axisPhylo(side=1)
## add dotchart
nTips = length(tree$tip)
ord = tree$edge[,2]
ord = ord[ord <= nTips]
my.palette<-c("black","black","black", "black", "black")#can add colors
colgr<-my.palette[tree.data$group]
symb<-c(16, 21, 8, 17)[tree.data$group]#set symbols
par(mar=c(5,0,2,1.1))
dotchart(map.data[ord],labels="",
ylim=c(1,length(tree$tip.label))-0.5, bg="grey",color=colgr[ord], pch=symb[ord])
map.data<-log(tree.data$range)
#map.data<-tree.data$regscore.pco.max
names(map.data)<-tree$tip.label
## create a split plot
layout(matrix(c(1,2),1,2),c(1,0.2))
## plot tree
xx<-contMap(tree,map.data,mar=c(4.1,1.1,1.1,0),res=200,plot=FALSE, method="anc.ML")
xx<-phytools::setMap(xx, invert=T)
plot(xx,legend=F,mar=c(4,1.1,1.1,0), direction="rightwards", tip.label=F)
axisPhylo(side=1)
## add dotchart
nTips = length(tree$tip)
ord = tree$edge[,2]
ord = ord[ord <= nTips]
my.palette<-c("black","black","black", "black", "black")#can add colors
colgr<-my.palette[tree.data$group]
symb<-c(16, 21, 8, 17)[tree.data$group]#set symbols
par(mar=c(5,0,2,1.1))
dotchart(map.data[ord],labels="",
ylim=c(1,length(tree$tip.label))-0.5, bg="grey",color=colgr[ord], pch=symb[ord])
map.data<-log(tree.data$polarity)
#map.data<-tree.data$regscore.pco.max
names(map.data)<-tree$tip.label
## create a split plot
layout(matrix(c(1,2),1,2),c(1,0.2))
## plot tree
xx<-contMap(tree,map.data,mar=c(4.1,1.1,1.1,0),res=200,plot=FALSE, method="anc.ML")
xx<-phytools::setMap(xx, invert=T)
plot(xx,legend=F,mar=c(4,1.1,1.1,0), direction="rightwards", tip.label=F)
axisPhylo(side=1)
## add dotchart
nTips = length(tree$tip)
ord = tree$edge[,2]
ord = ord[ord <= nTips]
my.palette<-c("black","black","black", "black", "black")#can add colors
colgr<-my.palette[tree.data$group]
symb<-c(16, 21, 8, 17)[tree.data$group]#set symbols
par(mar=c(5,0,2,1.1))
dotchart(map.data[ord],labels="",
ylim=c(1,length(tree$tip.label))-0.5, bg="grey",color=colgr[ord], pch=symb[ord])
map.data<-log(tree.data$irregularity)
#map.data<-tree.data$regscore.pco.max
names(map.data)<-tree$tip.label
## create a split plot
layout(matrix(c(1,2),1,2),c(1,0.2))
## plot tree
xx<-contMap(tree,map.data,mar=c(4.1,1.1,1.1,0),res=200,plot=FALSE, method="anc.ML")
xx<-phytools::setMap(xx, invert=T)
plot(xx,legend=F,mar=c(4,1.1,1.1,0), direction="rightwards", tip.label=F)
axisPhylo(side=1)
## add dotchart
nTips = length(tree$tip)
ord = tree$edge[,2]
ord = ord[ord <= nTips]
my.palette<-c("black","black","black", "black", "black")#can add colors
colgr<-my.palette[tree.data$group]
symb<-c(16, 21, 8, 17)[tree.data$group]#set symbols
par(mar=c(5,0,2,1.1))
dotchart(map.data[ord],labels="",
ylim=c(1,length(tree$tip.label))-0.5, bg="grey",color=colgr[ord], pch=symb[ord])
map.data<-log(tree.data$concentration)
#map.data<-tree.data$regscore.pco.max
names(map.data)<-tree$tip.label
## create a split plot
layout(matrix(c(1,2),1,2),c(1,0.2))
## plot tree
xx<-contMap(tree,map.data,mar=c(4.1,1.1,1.1,0),res=200,plot=FALSE, method="anc.ML")
xx<-phytools::setMap(xx, invert=T)
plot(xx,legend=F,mar=c(4,1.1,1.1,0), direction="rightwards", tip.label=F)
axisPhylo(side=1)
## add dotchart
nTips = length(tree$tip)
ord = tree$edge[,2]
ord = ord[ord <= nTips]
my.palette<-c("black","black","black", "black", "black")#can add colors
colgr<-my.palette[tree.data$group]
symb<-c(16, 21, 8, 17)[tree.data$group]#set symbols
par(mar=c(5,0,2,1.1))
dotchart(map.data[ord],labels="",
ylim=c(1,length(tree$tip.label))-0.5, bg="grey",color=colgr[ord], pch=symb[ord])
map.data<-log(tree.data$smoothness)
#map.data<-tree.data$regscore.pco.max
names(map.data)<-tree$tip.label
## create a split plot
layout(matrix(c(1,2),1,2),c(1,0.2))
## plot tree
xx<-contMap(tree,map.data,mar=c(4.1,1.1,1.1,0),res=200,plot=FALSE, method="anc.ML")
xx<-phytools::setMap(xx, invert=T)
plot(xx,legend=F,mar=c(4,1.1,1.1,0), direction="rightwards", tip.label=F)
axisPhylo(side=1)
## add dotchart
nTips = length(tree$tip)
ord = tree$edge[,2]
ord = ord[ord <= nTips]
my.palette<-c("black","black","black", "black", "black")#can add colors
colgr<-my.palette[tree.data$group]
symb<-c(16, 21, 8, 17)[tree.data$group]#set symbols
par(mar=c(5,0,2,1.1))
dotchart(map.data[ord],labels="",
ylim=c(1,length(tree$tip.label))-0.5, bg="grey",color=colgr[ord], pch=symb[ord])
map.data<-log(tree.data$eigen.sd)
#map.data<-tree.data$regscore.pco.max
names(map.data)<-tree$tip.label
## create a split plot
layout(matrix(c(1,2),1,2),c(1,0.2))
## plot tree
xx<-contMap(tree,map.data,mar=c(4.1,1.1,1.1,0),res=200,plot=FALSE, method="anc.ML")
xx<-phytools::setMap(xx, invert=T)
plot(xx,legend=F,mar=c(4,1.1,1.1,0), direction="rightwards", tip.label=F)
axisPhylo(side=1)
## add dotchart
nTips = length(tree$tip)
ord = tree$edge[,2]
ord = ord[ord <= nTips]
my.palette<-c("black","black","black", "black", "black")#can add colors
colgr<-my.palette[tree.data$group]
symb<-c(16, 21, 8, 17)[tree.data$group]#set symbols
par(mar=c(5,0,2,1.1))
dotchart(map.data[ord],labels="",
ylim=c(1,length(tree$tip.label))-0.5, bg="grey",color=colgr[ord], pch=symb[ord])
##read tree
tree<-ape::read.nexus(tree.file)
tree.data<-read.csv(data.file, na.strings = c("?"))
tree.data<-tree.data[which(tree.data$name!="exclude"),]#Exclude duplicates
tree.data<-tree.data[which(tree.data$rsq.max>0.75),]#Exclude less than 0.75 rsq
tree<-drop.tip(tree,setdiff(tree$tip.label,tree.data$name))
tree.data<-tree.data[match(tree$tip.label, tree.data$name),]
require(ape)
##read tree
tree<-ape::read.nexus(tree.file)
tree.data<-read.csv(data.file, na.strings = c("?"))
tree.data<-tree.data[which(tree.data$name!="exclude"),]#Exclude duplicates
tree.data<-tree.data[which(tree.data$rsq.max>0.75),]#Exclude less than 0.75 rsq
tree<-drop.tip(tree,setdiff(tree$tip.label,tree.data$name))
tree.data<-tree.data[match(tree$tip.label, tree.data$name),]
new<-strsplit(tree$tip.label, split="_")
genus<-substr(unlist(new), start=1, stop=3)
species<-substr(unlist(new), start=1, stop=1)
gen<-genus[seq(from=1,to=length(genus), by=2)]
spec<-species[seq(from=2,to=length(species), by=2)]
name<-paste0(gen, spec)
tree$tip.label<-name
rownames(tree.data)<-tree$tip.label
#variables
sub<-tree.data[-which(tree.data$group=="salamander"),]
sub$group2<-droplevels(sub$group2)
tree2<-drop.tip(tree, setdiff(tree$tip.label,rownames(sub)))
pgls.data<-sub[,c("regscore.pco.max","Mean.Variance", "group2")]
pgls.data$Mean.Variance<-log(pgls.data$Mean.Variance)
colnames(pgls.data)<-c("xvar", "yvar", "group")
#plot
plot(xvar, yvar, col=c("red", "blue", "green", "orange")[group])
legend(x="topleft", legend=levels(group), col=c("red", "blue", "green","orange"), pch=1, cex=0.5)
#plot 2 gr
plot(xvar, yvar, col=c("red", "blue", "green", "black")[group], pch=19, xlab="Regionalization score", ylab="Log Variance")
legend(x="topleft", legend=levels(group),bty="n", col=c("red", "blue", "green", "black"), pch=19, cex=0.5)
